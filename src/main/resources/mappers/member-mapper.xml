<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">


	<resultMap type="com.movie.sns.member.model.vo.Member"
		id="member_rm">

		<id property="memberNo" column="MEMBER_NO" />

		<result property="memberName" column="MEMBER_NM" />
		<result property="memberNickName" column="MEMBER_NICKNM" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="enrollDate" column="ENROLL_DT" />
		<result property="modifyDate" column="MODIFY_DT" />
		<result property="memberStatusCode" column="STATUS_CD" />
		<result property="memberGradeCode" column="GRADE_CD" />

	</resultMap>



	<resultMap type="com.movie.sns.member.model.vo.Image" id="Image_rm">
		<id property="imgNo" column="MEMBER_IMG_NO" />

		<result property="imgPath" column="MEMBER_IMG_PATH" />
		<result property="imgName" column="MEMBER_IMG_NM" />
		<result property="imgLevel" column="MEMBER_IMG_LEVEL" />
		<result property="imgOriginal" column="MEMBER_IMG_ORIGINAL" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>


	<resultMap type="com.movie.sns.admin.model.vo.AdminAsk" id="AdminAsk_rm">
		<id property="memberNo" column="MEMBER_NO" />

		<result property="memberName" column="MEMBER_NM" />
		<result property="askNo" column="ASK_NO" />
		<result property="askTitle" column="ASK_TITLE" />
		<result property="askContent" column="ASK_CONTENT" />
		<result property="askDate" column="ASK_DATE" />
	</resultMap>


	<!-- 로그인 -->
	<select id="login" parameterType="string" resultMap="member_rm">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND STATUS_CD = 200
		AND
		GRADE_CD = 100
	</select>


	<!-- 닉네임 중복 검사 -->
	<select id="nickNameDupCheck" parameterType="string"
		resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_NICKNM =
		#{memberNickName}
		AND
		STATUS_CD != 201
	</select>


	<!-- 이메일 중복 검사 -->
	<select id="emailDupCheck" parameterType="string"
		resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_EMAIL =
		#{memberEmail}
		AND STATUS_CD
		!= 201
	</select>


	<!-- 회원 가입 -->
   <insert id="signUp" useGeneratedKeys="true" parameterType="Member">
   
      <selectKey order="BEFORE" resultType="_int" keyProperty="memberNo">
         SELECT SEQ_MEMBER_NO.NEXTVAL FROM DUAL
      </selectKey>
   
      INSERT INTO MEMBER VALUES(
      #{memberNo}, #{memberName}, #{memberNickName}, #{memberPw}, #{memberEmail},
      DEFAULT, DEFAULT, 200, 100 , #{memberBirth} )
      
   </insert>

	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_NICKNM = #{memberNickName},
		MEMBER_BIRTH = #{memberBirth}
		WHERE
		MEMBER_NO = #{memberNo}
	</update>

	<!-- 현재 DB에 저장된 암호화된 비밀번호 조회 -->
	<select id="selectSavePw" resultType="string">
		SELECT MEMBER_PW FROM
		MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="map">
		UPDATE MEMBER SET
		MEMBER_PW =
		#{newPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 이미지 수정 -->
	<update id="updateImage">
		UPDATE MEMBER_IMG SET
		MEMBER_IMG_PATH = #{imgPath},
		MEMBER_IMG_NM = #{imgName},
		MEMBER_IMG_ORIGINAL = #{imgOriginal}
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_IMG_LEVEL = 0
	</update>

	<!-- 이미지 파일명 목록 조회 -->
	<select id="selectImgList" resultType="string">
		SELECT MEMBER_IMG_NM FROM MEMBER_IMG
	</select>


	<!-- 이미지 삭제 -->
	<delete id="deleteImages" parameterType="map">
		UPDATE MEMBER_IMG SET
		MEMBER_IMG_PATH = #{imgPath},
		MEMBER_IMG_NM = 'defaultProfileImage.png',
		MEMBER_IMG_ORIGINAL = 'defaultProfileImage.png'
		WHERE MEMBER_NO = #{MemberNo}
		AND MEMBER_IMG_LEVEL = 0
	</delete>


	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE MEMBER SET
		STATUS_CD = 201
		WHERE MEMBER_NO =
		#{memberNo}
	</update>

	<!-- 문의글 삽입 -->
		<insert id="insertAsk" useGeneratedKeys="true" parameterType="AdminAsk">
		INSERT INTO ADMIN_ASK VALUES(SEQ_ASK_NO.NEXTVAL, #{askTitle}, #{askContent}, DEFAULT, #{memberNo})
	</insert>
	
</mapper>
