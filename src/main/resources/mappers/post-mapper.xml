<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="postMapper">

	<resultMap type="Tag" id="Tag_rm">
		<id property="tagNo" column="TAG_NO"/>
		<result property="tagName" column="TAG_NM"/>
	</resultMap>
	
	<select id="selectTag" resultMap="Tag_rm">
		SELECT TAG_NM
		FROM TAG
		WHERE TAG_NM LIKE '%'||#{tagName}||'%'
	</select>
	
	<resultMap type="com.movie.sns.member.model.vo.Member" id="member_rm">
	 	<id property="memberNo" column="MEMBER_NO" />
	 	<result property="memberId" 	  column="MEMBER_ID"/>
	 	<result property="memberPw" 	  column="MEMBER_PW"/>
	 	<result property="memberName" 	  column="MEMBER_NM"/>
	 	<result property="memberNickName" column="MEMBER_NICKNM"/>
	 	<result property="memberPhone" 	  column="MEMBER_PHONE"/>
	 	<result property="memberEmail"    column="MEMBER_EMAIL"/>
	 	<result property="memberAddress"  column="MEMBER_ADDR"/>
	 	<result property="enrollDate" 	  column="ENROLL_DT"/>
	 	<result property="statusCode" 	  column="STATUS_CD"/>
	 	<result property="gradeCode" 	  column="GRADE_CD"/>
	 </resultMap>
	 
	 <select id="selectUser" resultMap="member_rm">
		SELECT MEMBER_NICKNM
		FROM MEMBER
		WHERE MEMBER_NICKNM LIKE '%'||#{tagName}||'%'
 	 </select>
 	 
 	 <insert id="insertPost" useGeneratedKeys="true">
 	 	
 	 	<selectKey order="BEFORE" resultType="_int" keyProperty="postNo">
 	 		SELECT SEQ_POST_NO.NEXTVAL FROM DUAL
 	 	</selectKey>
 	 	
 	 	INSERT INTO POST VALUES(#{postNo}, #{postContent}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, 500, #{memberNo}, #{checkUsePoster} )
 	 </insert>
 	 
 	 <select id="dupCheckTag" resultType="_int">
 	 	SELECT COUNT(TAG_NM)
		FROM TAG
		WHERE TAG_NM = #{tagName}
 	 </select>
	
	 <insert id="insertTag">
	 	INSERT INTO TAG VALUES(SEQ_TAG_CD.NEXTVAL, #{tagName})
	 </insert>

	 <insert id="insertPostTag">
	 	INSERT INTO POST_TAG VALUES(#{postNo}, (SELECT TAG_NO FROM TAG WHERE TAG_NM = #{tagName}))
	 </insert>
	
	 <select id="dupCheckMovie" resultType="_int">
	 	SELECT COUNT(MOVIE_NO)
		FROM MOVIE
		WHERE MOVIE_NO = ${movieNo}
	 </select>
	 <insert id="insertMovie">
	 	INSERT INTO MOVIE VALUES(#{movieNo}, #{movieTitle}, #{movieDate}, #{director}, #{poster}, #{movieGenre})
	 </insert>

	 <insert id="insertRating">
	 	INSERT INTO MOVIE_RATING VALUES(SEQ_MOVIE_RATING_NO.NEXTVAL, ${rating}, ${movieNo}, ${memberNo}, ${postNo})
	 </insert>
	 
	 <insert id="insertImgList" parameterType="list">
		INSERT INTO POST_IMG
		SELECT SEQ_POST_IMG_NO.NEXTVAL, A.* FROM
		<foreach collection="list" item="img" open="(" close=") A" separator=" UNION ALL ">  
			SELECT #{img.postImagePath} POST_IMG_PATH, #{img.postImageName} POST_IMG_NM, SYSDATE POST_IMG_DT, #{img.postImageOriginal} POST_IMG_ORIGINAL, 0 POST_IMG_LEVEL, #{img.postNo} POST_NO
   			FROM DUAL	   
		</foreach>
		
	</insert>
	
	<resultMap type="Post" id="post_rm">
		<id property="postNo" column="POST_NO"/>
		<result property="postContent" column="POST_CONTENT"/>
		<result property="readCount" column="READ_COUNT"/>
		<result property="likeCount" column="LIKE_COUNT"/>
		<result property="createDate" column="CREATE_DT"/>
		<result property="modifyDate" column="MODIFY_DT"/>
		<result property="postStatusCode" column="POST_STATUS_CD"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="checkUsePoster" column="CHECK_USE_POSTER"/>
		<result property="checkLike" column="CHECK_LIKE"/>
		
		<result property="rating" column="RATING"/>
		
		<result property="movieNo" column="MOVIE_NO"/>
		<result property="movieTitle" column="MOVIE_TITLE"/>
		<result property="movieDate" column="MOVIE_DT"/>
		<result property="director" column="MOVIE_DIRECTOR"/>
		<result property="poster" column="POSTER"/>
		<result property="movieGenre" column="MOVIE_GENRE"/>
		
		<result property="memberName" column="MEMBER_NM"/>
		<result property="memberNickName" column="MEMBER_NICKNM"/>

		<result property="memberNickName" column="MEMBER_NICKNM"/>
		<result property="memberNickName" column="MEMBER_NICKNM"/>

		<result property="replyCount" column="REPLY_COUNT"/>
		
		<collection property="listPostImage" column="POST_NO"
			javaType="java.util.ArrayList" ofType="PostImage" select="selectPostImageList"/>
			
		<collection property="listProfile" column="MEMBER_NO"
			javaType="java.util.ArrayList" ofType="Image" select="selectProfileList"/>
	</resultMap>
	
	<resultMap type="PostImage" id="postImage_rm">
		<id property="postImageNo" column="POST_IMG_NO"/>
		<result property="postImagePath" column="POST_IMG_PATH"/>
		<result property="postImageName" column="POST_IMG_NM"/>
		<result property="postImageDate" column="POST_IMG_DT"/>
		<result property="postImageOriginal" column="POST_IMG_ORIGINAL"/>
		<result property="postImageLevel" column="POST_IMG_LEVEL"/>
		<result property="postNo" column="POST_NO"/>
	</resultMap>
		
	<select id="selectPostImageList" resultMap="postImage_rm">
		SELECT * 
		FROM POST_IMG
		WHERE POST_NO = #{postNo}
		ORDER BY POST_IMG_NO
	</select>
	
	<resultMap type="Image" id="profile_rm">
		<id property="imgNo" column="MEMBER_IMG_NO"/>
		<result property="imgPath" column="MEMBER_IMG_PATH"/>
		<result property="imgName" column="MEMBER_IMG_NM"/>
		<result property="imgLevel" column="MEMBER_IMG_LEVEL"/>
		<result property="imgOriginal" column="MEMBER_IMG_ORIGINAL"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<select id="selectProfileList" resultMap="profile_rm">
		SELECT * FROM MEMBER_IMG
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectPostList" resultMap="post_rm">
		SELECT C.POST_NO, POST_CONTENT, LIKE_COUNT, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') CREATE_DT, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') MODIFY_DT, CHECK_USE_POSTER,
		       C.MEMBER_NO, MEMBER_NM, MEMBER_NICKNM, A.MOVIE_NO, D.MOVIE_TITLE, TO_CHAR(D.MOVIE_DT, 'YYYY-MM-DD') MOVIE_DT, D.MOVIE_DIRECTOR, D.POSTER, D.MOVIE_GENRE, RATING,
		       POST_STATUS_CD, (SELECT COUNT(*) FROM REPLY WHERE POST_NO = C.POST_NO) REPLY_COUNT
		       <if test="memberNo > 0">
		       		, (SELECT COUNT(*) FROM "LIKE" WHERE POST_NO = C.POST_NO AND MEMBER_NO = #{memberNo}) CHECK_LIKE 
		       </if>
		FROM POST C
		LEFT JOIN MOVIE_RATING A ON (C.POST_NO = A.POST_NO)
		LEFT JOIN MEMBER B ON (C.MEMBER_NO = B.MEMBER_NO)
		LEFT JOIN MOVIE D ON  (A.MOVIE_NO = D.MOVIE_NO)
		WHERE POST_STATUS_CD = 500
		ORDER BY POST_NO DESC
	</select>
	
	<select id="checkDupLike" resultType="_int">
		SELECT COUNT(*)
		FROM "LIKE"
		WHERE POST_NO = #{postNo}
		AND MEMBER_NO = #{memberNo}
	</select>
	
	<insert id="insertLike">
		INSERT INTO "LIKE" VALUES(#{postNo}, #{memberNo}, DEFAULT)
	</insert>
	
	<delete id="deleteLike">
		DELETE FROM "LIKE" WHERE POST_NO = #{postNo} AND MEMBER_NO = #{memberNo}
	</delete>
	
	<update id="plusLike">
		UPDATE POST SET LIKE_COUNT = LIKE_COUNT + 1 WHERE POST_NO = ${postNo}
	</update>

	<update id="minusLike">
		UPDATE POST SET LIKE_COUNT = LIKE_COUNT - 1 WHERE POST_NO = ${postNo}
	</update>

	<update id="deletePost">
		UPDATE POST SET POST_STATUS_CD = 501 WHERE POST_NO = #{postNo}
	</update>
	
	<select id="selectPostOne" resultMap="post_rm">
		SELECT C.POST_NO, POST_CONTENT, LIKE_COUNT, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') CREATE_DT, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') MODIFY_DT, CHECK_USE_POSTER,
		       C.MEMBER_NO, MEMBER_NM, MEMBER_NICKNM, A.MOVIE_NO, D.MOVIE_TITLE, TO_CHAR(D.MOVIE_DT, 'YYYY-MM-DD') MOVIE_DT, D.MOVIE_DIRECTOR, D.POSTER, D.MOVIE_GENRE, RATING,
		       POST_STATUS_CD, (SELECT COUNT(*) FROM REPLY WHERE POST_NO = C.POST_NO) REPLY_COUNT
		       <if test="memberNo > 0">
		       		, (SELECT COUNT(*) FROM "LIKE" WHERE POST_NO = C.POST_NO AND MEMBER_NO = #{memberNo}) CHECK_LIKE 
		       </if>
		FROM POST C
		LEFT JOIN MOVIE_RATING A ON (C.POST_NO = A.POST_NO)
		LEFT JOIN MEMBER B ON (C.MEMBER_NO = B.MEMBER_NO)
		LEFT JOIN MOVIE D ON  (A.MOVIE_NO = D.MOVIE_NO)
		WHERE C.POST_NO = #{postNo}
		ORDER BY POST_NO DESC
	</select>
	
	<insert id="insertReport">
		INSERT INTO REPORT VALUES(SEQ_REPORT_NO.NEXTVAL, #{memberNo}, #{reportContent}, DEFAULT, #{reportTypeNo}, #{targetPK})
	</insert>
	
	
</mapper>
