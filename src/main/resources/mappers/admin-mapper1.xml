<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper1">

	<resultMap type="AdminPost" id="adminPost_rm">

		<id property="postNo" column="POST_NO" />
		<result property="memberNm" column="MEMBER_NM" />
		<result property="memberNick" column="MEMBER_NICKNM" />
		<result property="postContent" column="POST_CONTENT" />
		<result property="readCount" column="READ_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="createDt" column="CREATE_DT" />
		<result property="modifyDt" column="MODIFY_DT" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="statusNm" column="POST_STATUS_NM" />
		<result property="status" column="POST_STATUS_CD" />
		<result property="imgPath" column="POST_IMG_PATH" />
		<result property="imgNm" column="POST_IMG_NM" />
		<result property="blind" column="BLIND_POST_CONTENT" />
		<result property="CNT" column="CNT" /> <!-- 신고 수   -->
		<result property="poster" column="POSTER" /> <!-- 영화 주소 -->
		<result property="youtube_path" column="YOUTUBE_PATH" /> <!-- 영화 주소 -->
	</resultMap>

	<resultMap type="AdminReport" id="AdminReport_rm">
		<id property="reportNo" column="REPORT_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNick" column="MEMBER_NICKNM" />
		<result property="memberNm" column="MEMBER_NM" />
		<result property="postNo" column="POST_NO" />
		<result property="reportContent" column="REPORT_CONTENT" />
		<result property="typeNo" column="REPORT_TYPE_NO" />
		<result property="typeNm" column="REPORT_TYPE_NM" />
		<result property="createDt" column="CREATE_DT" />
	</resultMap>


	<resultMap type="AdminReply" id="adminReply_rm">

		<id property="replyNo" column="REPLY_NO" />
		<result property="postNo" column="POST_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNick" column="MEMBER_NICKNM" />
		<result property="memberNm" column="MEMBER_NM" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="createDt" column="REPLY_CREATE_DT" />
		<result property="status" column="REPLY_STATUS_CD" />
		<result property="statusNm" column="REPLY_STATUS_NM" />
		<result property="blind" column="BLIND_REPLY_CONTENT" />
	</resultMap>


	<resultMap type="postStatus" id="status_rm">
		<id property="statusCd" column="POST_STATUS_CD" />
		<result property="statusNm" column="POST_STATUS_NM" />
	</resultMap>
	<resultMap type="ReplyStatus" id="reply_Status_rm">
		<id property="statusCd" column="REPLY_STATUS_CD" />
		<result property="statusNm" column="REPLY_STATUS_NM" />
	</resultMap>

	<select id="memberCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER

	</select>


	<select id="askCount" resultType="_int">
		SELECT COUNT(*) FROM ADMIN_ASK

	</select>


	<select id="replyView" resultMap="adminReply_rm">
		SELECT REPLY_NO ,
		REPLY_CONTENT ,REPLY_CREATE_DT , LIKE_COUNT ,
		POST_NO ,
		MEMBER_NO ,MEMBER_NICKNM,
		REPLY_STATUS_CD , REPLY_STATUS_NM ,
		MEMBER_NM,BLIND_REPLY_CONTENT
		FROM REPLY
		JOIN MEMBER
		USING(MEMBER_NO)
		JOIN REPLY_STATUS
		USING(REPLY_STATUS_CD)
		LEFT JOIN BLIND_REPLY
		USING(REPLY_NO)
		WHERE REPLY_NO = #{replyNo}
	</select>



	<!--댓글 블라인드 내용 삽입 -->

	<update id="changeReplyStatus">
		UPDATE REPLY SET REPLY_STATUS_CD = #{status}
		WHERE
		REPLY_NO = #{replyNo}

	</update>



	<insert id="insertReplyBlind">
		INSERT INTO BLIND_REPLY
		VALUES(SEQ_BLIND_REPLY_NO.NEXTVAL
		,#{blind}, DEFAULT
		,#{replyNo})

	</insert>


	<!-- 댓글 블라인드 내용 지우기 -->
	<delete id="deleteReplyBlind">
		DELETE FROM BLIND_REPLY
		WHERE REPLY_NO = #{replyNo}
	</delete>


	<!--댓글 상태조회 -->
	<select id="searchStatusReply" resultMap="reply_Status_rm">
		SELECT REPLY_STATUS_CD
		FROM REPLY
		WHERE REPLY_NO = #{replyNo}
	</select>


	<!-- 댓글 카운트 -->
	<select id="replyCount" resultType="_int">
		SELECT COUNT(*) FROM REPLY

		<if test="inputResult != ''">
			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'replyNo'">
						WHERE REPLY_NO = #{inputResult}

					</when>
					<when test="searchPost == 'postNo'">
						WHERE POST_NO = #{inputResult}

					</when>
					<when test="searchPost == 'memberNm'">
						JOIN MEMBER USING(MEMBER_NO)
						WHERE MEMBER_NM LIKE
						#{inputResult}||'%'
						OR MEMBER_NM
						LIKE '%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'memberNo'">

						WHERE MEMBER_NO = #{inputResult}
					</when>
					<when test="searchPost == 'status'">

						JOIN REPLY_STATUS USING(REPLY_STATUS_CD)
						WHERE
						REPLY_STATUS_NM LIKE '%'|| #{inputResult}||'%'
						OR REPLY_STATUS_NM
						LIKE #{inputResult}||'%'
					</when>
				</choose>

			</if>



		</if>

	</select>
	<!-- 댓글 상태 조회 -->
	<select id="selectReplyStatus" resultMap="reply_Status_rm">
		SELECT REPLY_STATUS_NM
		, REPLY_STATUS_CD
		FROM REPLY_STATUS


	</select>
	<!-- 댓글 조회 -->
	<select id="adminReply" resultMap="adminReply_rm">
		SELECT REPLY_NO ,
		REPLY_CONTENT , REPLY_CREATE_DT , LIKE_COUNT ,
		POST_NO , MEMBER_NO ,
		REPLY_STATUS_CD , REPLY_STATUS_NM , MEMBER_NM ,
		MEMBER_NICKNM
		FROM REPLY
		JOIN MEMBER
		USING(MEMBER_NO)
		JOIN REPLY_STATUS
		USING(REPLY_STATUS_CD)

		<if test="inputResult != ''">
			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'replyNo'">
						WHERE REPLY_NO = #{inputResult}

					</when>
					<when test="searchPost == 'postNo'">
						WHERE POST_NO = #{inputResult}

					</when>
					<when test="searchPost == 'memberNm'">
						WHERE MEMBER_NM LIKE
						#{inputResult}||'%'
						OR MEMBER_NM
						LIKE '%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'memberNo'">
						WHERE MEMBER_NO = #{inputResult}
					</when>
					<when test="searchPost == 'status'">
						WHERE REPLY_STATUS_NM LIKE '%'||
						#{inputResult}||'%'
						OR REPLY_STATUS_NM LIKE #{inputResult}||'%'
					</when>
				</choose>
			</if>
		</if>


		ORDER BY
		REPLY_NO DESC
	</select>



	<select id="postCount" resultType="_int">
		SELECT COUNT(*) FROM POST

		<if test="inputResult != ''">

			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'memberNo'">
						WHERE MEMBER_NO = #{inputResult}

					</when>
					<when test="searchPost == 'memberNm'">
						JOIN MEMBER USING(MEMBER_NO)
						WHERE MEMBER_NM LIKE
						#{inputResult}||'%'
						OR
						MEMBER_NM
						LIKE '%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'memberNick'">

						JOIN MEMBER USING(MEMBER_NO)
						WHERE MEMBER_NICKNM LIKE
						#{inputResult}||'%'
						OR
						MEMBER_NICKNM
						LIKE '%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'postNo'">

						WHERE POST_NO = #{inputResult}
					</when>
					<when test="searchPost == 'status'">
						JOIN
						POST_STATUS
						USING(POST_STATUS_CD)
						WHERE
						POST_STATUS_NM LIKE '%'||#{inputResult}||'%'
						OR POST_STATUS_NM LIKE
						#{inputResult}||'%'

					</when>
				</choose>

			</if>

			<if test="statusValue != 'all'">
				<choose>
					<when test="statusValue == '500'">
						AND POST_STATUS_CD = 500
					</when>
					<when test="statusValue == '501'">
						AND POST_STATUS_CD = 501
					</when>
					<when test="statusValue == '502'">
						AND POST_STATUS_CD = 502
					</when>
					<when test="statusValue == '503'">
						AND POST_STATUS_CD = 503
					</when>
					<when test="statusValue == '504'">
						AND POST_STATUS_CD = 504
					</when>
				</choose>
			</if>

		</if>

		<if test="inputResult == ''">

			<if test="statusValue != 'all'">
				<choose>
					<when test="statusValue == '500'">
						WHERE POST_STATUS_CD = 500
					</when>
					<when test="statusValue == '501'">
						WHERE POST_STATUS_CD = 501
					</when>
					<when test="statusValue == '502'">
						WHERE POST_STATUS_CD = 502
					</when>
					<when test="statusValue == '503'">
						WHERE POST_STATUS_CD = 503
					</when>
					<when test="statusValue == '504'">
						WHERE POST_STATUS_CD = 504
					</when>
				</choose>
			</if>

		</if>


	</select>


	<select id="adminPost" resultMap="adminPost_rm">
		SELECT POST_NO , MEMBER_NM,MEMBER_NICKNM,
		POST_CONTENT ,
		LIKE_COUNT,
		POST.CREATE_DT,
		POST.MODIFY_DT,
		MEMBER_NO ,
		POST_STATUS_NM,
		POST_STATUS_CD
		FROM POST
		JOIN
		POST_STATUS
		USING(POST_STATUS_CD)
		JOIN
		MEMBER
		USING (MEMBER_NO)

		<if test="inputResult != ''">
			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'memberNo'">
						WHERE MEMBER_NO = #{inputResult}

					</when>
					<when test="searchPost == 'memberNm'">

						WHERE MEMBER_NM LIKE #{inputResult}||'%'
						OR
						MEMBER_NM
						LIKE
						'%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'memberNick'">

						WHERE MEMBER_NICKNM LIKE #{inputResult}||'%'
						OR
						MEMBER_NICKNM
						LIKE
						'%'||#{inputResult}||'%'

					</when>
					<when test="searchPost == 'postNo'">

						WHERE POST_NO = #{inputResult}
					</when>
					<when test="searchPost == 'status'">
						WHERE POST_STATUS_NM LIKE '%'||#{inputResult}||'%'
						OR POST_STATUS_NM LIKE #{inputResult}||'%'
					</when>
				</choose>
			</if>

			<if test="statusValue != 'all'">
				<choose>
					<when test="statusValue == '500'">
						AND POST_STATUS_CD = 500
					</when>
					<when test="statusValue == '501'">
						AND POST_STATUS_CD = 501
					</when>
					<when test="statusValue == '502'">
						AND POST_STATUS_CD = 502
					</when>
					<when test="statusValue == '503'">
						AND POST_STATUS_CD = 503
					</when>
					<when test="statusValue == '504'">
						AND POST_STATUS_CD = 504
					</when>
				</choose>
			</if>

		</if>

		<if test="inputResult == ''">

			<if test="statusValue != 'all'">
				<choose>
					<when test="statusValue == '500'">
						WHERE POST_STATUS_CD = 500
					</when>
					<when test="statusValue == '501'">
						WHERE POST_STATUS_CD = 501
					</when>
					<when test="statusValue == '502'">
						WHERE POST_STATUS_CD = 502
					</when>
					<when test="statusValue == '503'">
						WHERE POST_STATUS_CD = 503
					</when>
					<when test="statusValue == '504'">
						WHERE POST_STATUS_CD = 504
					</when>
				</choose>
			</if>

		</if>

		<choose>
			<when test="sortColumn == null">
				ORDER BY POST_NO DESC
			</when>

			<otherwise>
				<choose>
					<when test="sortColumn == 'createDate'">
						<if test="sortMethod == 'desc'">
							ORDER BY POST.CREATE_DT DESC
						</if>
						<if test="sortMethod == 'asc'">
							ORDER BY POST.CREATE_DT
						</if>
					</when>

					<when test="sortColumn == 'modifyDate'">
						<if test="sortMethod == 'desc'">
							ORDER BY POST.MODIFY_DT DESC
						</if>
						<if test="sortMethod == 'asc'">
							ORDER BY POST.MODIFY_DT ASC
						</if>
					</when>
				</choose>
			</otherwise>
		</choose>

	</select>

	<update id="changeStatus">
		UPDATE POST SET POST_STATUS_CD = #{status}
		WHERE
		POST_NO = #{postNo}
	</update>

	<insert id="blind">
		INSERT INTO BLIND_POST VALUES(SEQ_BLIND_NO.NEXTVAL
		,#{blind}, DEFAULT
		,#{postNo})

	</insert>


	<select id="selectStatus" resultMap="status_rm">
		SELECT * FROM POST_STATUS
	</select>
	<select id="postView" resultMap="adminPost_rm">
 	  SELECT POST.POST_NO , MEMBER_NM,MEMBER_NICKNM, POST_CONTENT , LIKE_COUNT,
		POST.CREATE_DT, POST.MODIFY_DT, MEMBER_NO , POST_STATUS_NM,
		POST_STATUS_CD , POST_IMG_PATH , POST_IMG_NM, POSTER,YOUTUBE_PATH,
		(SELECT COUNT(*) FROM
		REPORT
		JOIN POST ON(TARGET_PK = POST_NO)
		WHERE POST.POST_NO = #{postNo}) CNT
		FROM POST
        LEFT JOIN POST_YOUTUBE ON(POST.POST_NO = POST_YOUTUBE.POST_NO)
		LEFT JOIN POST_STATUS USING(POST_STATUS_CD)
        LEFT JOIN MOVIE_RATING ON(POST.POST_NO = MOVIE_RATING.POST_NO)
        LEFT JOIN MOVIE ON(MOVIE_RATING.MOVIE_NO = MOVIE.MOVIE_NO)
		LEFT JOIN POST_IMG  I ON(POST.POST_NO = I.POST_NO)
        JOIN MEMBER A  ON(A.MEMBER_NO = POST.MEMBER_NO)
		WHERE POST.POST_NO = #{postNo}
        

	</select>

	<select id="searchStatus" resultMap="status_rm">

		SELECT POST_STATUS_CD
		FROM
		POST_STATUS
		JOIN POST USING(POST_STATUS_CD)
		WHERE POST_NO = #{postNo}
	</select>

	<delete id="deleteBlind">
		DELETE FROM BLIND_POST
		WHERE POST_NO = #{postNo}

	</delete>


	<select id="reportCount" resultType="_int">

		SELECT COUNT(*) FROM REPORT



		<if test="inputResult != ''">

			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'memberNo'">
						WHERE MEMBER_NO = #{inputResult}
					</when>
					<when test="searchPost == 'memberNm'">
						JOIN MEMBER USING(MEMBER_NO)
						WHERE MEMBER_NM LIKE
						#{inputResult}||'%'
						OR
						MEMBER_NM
						LIKE '%'||#{inputResult}||'%'
					</when>
					<when test="searchPost == 'status'">
						JOIN REPORT_TYPE USING(REPORT_TYPE_NO)
						WHERE
						REPORT_TYPE_NM LIKE #{inputResult}||'%'
					</when>
					<when test="searchPost == 'reportNo'">
						WHERE REPORT_NO = #{inputResult}
					</when>
				</choose>

			</if>

		</if>






	</select>

	<select id="reportBoard" resultMap="AdminReport_rm">

		SELECT REPORT_NO , REPORT.MEMBER_NO , REPORT_CONTENT ,
		REPORT.CREATE_DT , REPORT_TYPE_NO , MEMBER_NICKNM
		,TARGET_PK,MEMBER_NM, REPORT_TYPE_NM
		FROM REPORT
		JOIN REPORT_TYPE USING(REPORT_TYPE_NO)
		LEFT JOIN POST ON(REPORT.TARGET_PK = POST.POST_NO)
		JOIN MEMBER ON(REPORT.MEMBER_NO = MEMBER.MEMBER_NO)

		<if test="inputResult != ''">

			<if test="searchPost != null">
				<choose>
					<when test="searchPost == 'memberNo'">
						WHERE REPORT.MEMBER_NO = #{inputResult}
					</when>
					<when test="searchPost == 'memberNm'">
						WHERE MEMBER_NM LIKE #{inputResult}||'%'
						OR
						MEMBER_NM
						LIKE '%'||#{inputResult}||'%'
					</when>
					<when test="searchPost == 'status'">
						WHERE REPORT_TYPE_NM LIKE #{inputResult}||'%'
					</when>
					<when test="searchPost == 'reportNo'">
						WHERE REPORT_NO = #{inputResult}
					</when>
				</choose>

			</if>

		</if>
		ORDER BY REPORT_NO DESC

	</select>



	<select id="reportView" resultMap="AdminReport_rm">
		SELECT REPORT_NO , REPORT.MEMBER_NO , REPORT_CONTENT , REPORT.CREATE_DT ,
		REPORT_TYPE_NO , MEMBER_NICKNM
		,TARGET_PK,MEMBER_NM, REPORT_TYPE_NM , REPORT.MEMBER_NO
		FROM REPORT
		JOIN REPORT_TYPE USING(REPORT_TYPE_NO)
		LEFT JOIN POST ON(REPORT.TARGET_PK = POST.POST_NO)
		JOIN MEMBER ON(REPORT.MEMBER_NO = MEMBER.MEMBER_NO)
		WHERE REPORT_NO = #{reportNo}

	</select>


	<!-- 게시글 상태 일괄 변경(일반) -->
	<update id="multiChangePostStatus">
		UPDATE POST SET
		POST_STATUS_CD = 500
		WHERE POST_NO IN (

		<foreach collection="array" item="postNo" separator=",">
			#{postNo}
		</foreach>

		)
	</update>



</mapper>
